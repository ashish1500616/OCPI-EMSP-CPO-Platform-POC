name: OCPI EMSP Backend Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip --version
        cat requirements.txt
        pip install -r requirements.txt -v

    - name: Run unit tests
      run: |
        python testing/run_tests.py unit --no-html

    - name: Run integration tests
      run: |
        python testing/run_tests.py integration --no-html

    - name: Run compliance tests
      run: |
        python testing/run_tests.py compliance --no-html

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: tests/reports/coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results-${{ matrix.python-version }}
        path: |
          tests/reports/
          !tests/reports/coverage/

  performance:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: 3.11

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip --version
        cat requirements.txt
        pip install -r requirements.txt -v

    - name: Run performance tests
      run: |
        python testing/run_tests.py performance --no-html

    - name: Upload performance results
      uses: actions/upload-artifact@v3
      with:
        name: performance-results
        path: tests/reports/

  security:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: 3.11

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip --version
        cat requirements.txt
        pip install -r requirements.txt -v
        pip install bandit safety -v

    - name: Run security checks with bandit
      run: |
        bandit -r . -f json -o tests/reports/bandit-report.json || true

    - name: Check dependencies with safety
      run: |
        safety check --json --output tests/reports/safety-report.json || true

    - name: Upload security results
      uses: actions/upload-artifact@v3
      with:
        name: security-results
        path: tests/reports/*-report.json
