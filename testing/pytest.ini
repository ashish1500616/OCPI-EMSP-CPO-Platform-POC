[tool:pytest]
# Pytest configuration for OCPI EMSP Backend Testing Framework

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Minimum version
minversion = 7.0

# Add options
addopts =
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=.
    --cov-report=html:tests/reports/coverage
    --cov-report=term-missing
    --cov-report=xml:tests/reports/coverage.xml
    --html=tests/reports/report.html
    --self-contained-html
    --junitxml=tests/reports/junit.xml

# Markers
markers =
    unit: Unit tests for individual components
    integration: Integration tests for EMSP-CPO interactions
    compliance: OCPI 2.2.1 specification compliance tests
    performance: Performance and load tests
    slow: Tests that take a long time to run
    benchmark: Benchmark tests for performance measurement

# Test timeout (in seconds)
timeout = 300

# Asyncio configuration
asyncio_mode = auto

# Warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:httpx.*

# Coverage configuration
[coverage:run]
source = .
omit =
    tests/*
    venv/*
    env/*
    .venv/*
    */site-packages/*
    setup.py
    conftest.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = tests/reports/coverage

[coverage:xml]
output = tests/reports/coverage.xml
